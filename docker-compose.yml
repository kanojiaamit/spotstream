
services:
  kafka:
    image: apache/kafka:3.7.0
    container_name: kafka
    user: "0:0"  # Run as root to ensure proper permissions
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'INTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      CLUSTER_ID: 'LO7d6CkRTcyqrDnXzjyVIA'
      KAFKA_MESSAGE_MAX_BYTES: 359396800
      KAFKA_SOCKET_LISTEN_ON_ALL_INTERFACES: 'true'
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
    networks:
      - spotstream_network
    volumes:
      - kafka_data:/tmp/kraft-combined-logs
      - ./kafka/server.properties:/opt/kafka/config/kraft/server.properties
    command: >
      bash -c "
      chown -R 1001:1001 /tmp/kraft-combined-logs &&
      chmod -R 777 /tmp/kraft-combined-logs &&
      if [ ! -f /tmp/kraft-combined-logs/meta.properties ]; then
        /opt/kafka/bin/kafka-storage.sh format -t $$(/opt/kafka/bin/kafka-storage.sh random-uuid) -c /opt/kafka/config/kraft/server.properties;
      fi &&
      /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kraft/server.properties"

  spotify-producer:
    build:
      context: .
      dockerfile: spotify-producer/Dockerfile
    container_name: spotify-producer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    env_file:
      - .env
    networks:
      - spotstream_network
    volumes:
      - ./spotify-producer:/app 

  spark_processor:
    build:
      context: ./spark_streaming
      dockerfile: Dockerfile
    container_name: spark_processor
    depends_on:
      - kafka
      - cassandra
      - postgres
    volumes:
      - ./spark_streaming:/app
    networks:
      - spotstream_network

  cassandra:
    image: cassandra:4.1
    container_name: cassandra
    ports:
      - "9042:9042"
    networks:
      - spotstream_network
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe keyspaces'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: spotifydb
    ports:
      - "5432:5432"
    networks:
      - spotstream_network

  airflow-init:
    image: apache/airflow:2.8.1
    container_name: airflow_init
    depends_on:
      - postgres
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin@postgres:5432/spotifydb
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW_UID: 1000
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
    networks:
      - spotstream_network
    command: version

  airflow-scheduler:
    image: apache/airflow:2.8.1
    container_name: airflow_scheduler
    depends_on:
      - postgres
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin@postgres:5432/spotifydb
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW_UID: 1000
    networks:
      - spotstream_network
    command: scheduler

  airflow-webserver:
    image: apache/airflow:2.8.1
    container_name: airflow_webserver
    depends_on:
      - airflow-scheduler
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin@postgres:5432/spotifydb
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW_UID: 1000
    networks:
      - spotstream_network
    command: webserver
    
networks:
  spotstream_network:
    name: spotstream_network
    driver: bridge

volumes:
  kafka_data:
    driver: local
  